project-id: helloworld-fydp
google-compute-instance-id: rethinkdb-fydp

Deploying NodeJS App
====================

https://cloud.google.com/container-engine/docs/before-you-begin
https://cloud.google.com/container-engine/docs/tutorials/hello-node

Make sure you expose the right ports for the service:
    kubectl expose rc helloworld-fydp --create-external-load-balancer=true --port=3000 --target-port=3000

Problem with running sudo gcloud push
    http://nova-aquila.blogspot.ca/2015/07/gcloud-docker-push-tls-error.html

http://lzone.de/cheat-sheet/kubernetes
    Run kubectl get pods to check status of the deployed application

Redeploying NodeJS App
======================

docker build -t gcr.io/${PROJECT_ID}/helloworld-node . # build image
gcloud docker push gcr.io/${PROJECT_ID}/helloworld-node # push image
kubectl stop rc helloworld-fydp # stop pod
kubectl run helloworld-fydp --image=gcr.io/${PROJECT_ID}/helloworld-fydp:latest # restart pod

For some reason, rebuilding and pushing the docker image and then restarting the pod does not cause the pod to actually use the new image. A work around is to just push a renamed image and restart, pointing the pod to the renamed image.

Deploying RethinkDB
===================

gcloud config set project <project-id>
gcloud compute instances create rethinkdb-fydp --image container-vm --zone us-central1-a --machine-type f1-micro
gcloud compute ssh --zone us-central1-a rethinkdb-fydp
sudo docker pull rethinkdb
sudo gcloud compute firewall-rules create rdb-http --allow tcp:8080
sudo gcloud compute firewall-rules create rdb-client --allow tcp:28015 # not secure at all
sudo docker run -d -p 8080:8080 -p 28015:28015 -p 29015:29015 rethinkdb

To determine the public address: gcloud compute instances list

Note: using sudo might result in a permission error
